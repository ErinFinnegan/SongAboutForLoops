//  Notes on rhyme schemes:  http://www.taxi.com/music-business-faq/songwriting/rhyme/rhymerhymeschemes.php
// Here I tried to use an ABABrhyme


First you initialize,
then you check if your condition is true.
Next you increment another step, your code amplifies!
Is the condition still true?  It’s time to review!

We’ve sung this song [zero] times before,
For as long as we’ve sung it less than three times,
We’ll sing this song, and sing it once more.
Until we hit four, or run out of rhymes.

Initialize! 
Is the condition true?
Take one step forward.
Is the condition false? Then stop.

—- In Javascript
For the variable i equals zero,
while i is less than five,
i equals i plus one.
(They call this i++)
Do my command!

— C or C++
for initialization; condition; 
increment/decrement
    statement

- Fred Bremmer version (based on http://poetry.about.com/od/poetryplay/l/blwakawaka2.htm  )
#for (var i = 0; i < 5; i++) {
#    // ...
#}

for left paren var i equals zero, semi-colon
i waka five semi-colon
i plus plus right paren curly bracket
some code you wrote
curly bracket
end


